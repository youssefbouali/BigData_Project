
version: '3.8'
services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LOG_DIRS=/tmp/kraft-combined-logs
    ports:
      - "9092:9092"


  cassandra:
    image: cassandra:3.11
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_START_RPC: 'true'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  pcap_processor:
    build:
      context: ./pcap_processor
    container_name: pcap_processor
    privileged: true
    volumes:
      - ./pcap:/pcap
      - ./output:/output
      - ./cicflowmeter:/cicflowmeter
    networks:
      - netflow_net

  producer:
    build:
      context: ./producer
    container_name: csv_producer
    depends_on:
      - kafka
    volumes:
      - ./output:/output
    environment:
      KAFKA_BOOTSTRAP: "kafka:9092"
    command: ["python", "producer.py"]

  spark_job:
    build:
      context: ./spark_job
    container_name: spark_job_runner
    depends_on:
      - kafka
      - cassandra
      - elasticsearch
    volumes:
      - ./spark_job:/app
    environment:
      KAFKA_BOOTSTRAP: "kafka:9092"
      CASSANDRA_HOST: "cassandra"
      ES_HOST: "elasticsearch"
    command: ["bash", "/app/run_spark.sh"]
    networks:
      - netflow_net

volumes:
  esdata:

networks:
  netflow_net:
    driver: bridge
